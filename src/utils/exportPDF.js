import jsPDF from 'jspdf';

export const exportToPDF = (results) => {
  // Create new PDF document
  const doc = new jsPDF();
  
  // Set font styles
  doc.setFontSize(24);
  doc.setFont(undefined, 'bold');
  
  // Title
  doc.text('SaaS Pricing Recommendation', 105, 20, { align: 'center' });
  
  // Date
  doc.setFontSize(10);
  doc.setFont(undefined, 'normal');
  doc.text(`Generated: ${new Date().toLocaleDateString()}`, 105, 30, { align: 'center' });
  
  // Key Metrics Section
  doc.setFontSize(16);
  doc.setFont(undefined, 'bold');
  doc.text('Key Metrics', 20, 50);
  
  doc.setFontSize(12);
  doc.setFont(undefined, 'normal');
  doc.text(`Recommended Price: $${results.metrics.recommendedPrice}/month`, 20, 60);
  doc.text(`Projected Monthly Revenue: $${results.metrics.monthlyRevenue.toLocaleString()}`, 20, 70);
  doc.text(`Projected Annual Revenue: $${results.metrics.yearlyRevenue.toLocaleString()}`, 20, 80);
  doc.text(`vs. Competitor: ${results.metrics.competitorComparison > 0 ? '+' : ''}${results.metrics.competitorComparison}%`, 20, 90);
  
  // Pricing Tiers Section
  doc.setFontSize(16);
  doc.setFont(undefined, 'bold');
  doc.text('Recommended Pricing Tiers', 20, 110);
  
  // Draw pricing table
  let yPosition = 120;
  const tiers = Object.values(results.tiers);
  
  tiers.forEach((tier, index) => {
    // Tier box
    doc.setDrawColor(200, 200, 200);
    doc.setFillColor(245, 245, 245);
    doc.rect(20 + (index * 60), yPosition, 55, 80, 'FD');
    
    // Tier name
    doc.setFontSize(14);
    doc.setFont(undefined, 'bold');
    doc.text(tier.name, 47.5 + (index * 60), yPosition + 10, { align: 'center' });
    
    // Price
    doc.setFontSize(18);
    doc.text(`$${tier.price}`, 47.5 + (index * 60), yPosition + 25, { align: 'center' });
    
    doc.setFontSize(10);
    doc.setFont(undefined, 'normal');
    doc.text('/month', 47.5 + (index * 60), yPosition + 32, { align: 'center' });
    
    // Features
    doc.setFontSize(8);
    let featureY = yPosition + 45;
    tier.features.forEach((feature, fIndex) => {
      if (fIndex < 3) { // Show first 3 features only
        doc.text(`• ${feature}`, 23 + (index * 60), featureY);
        featureY += 8;
      }
    });
    
    // Recommended badge
    if (tier.recommended) {
      doc.setFillColor(59, 130, 246); // Blue
      doc.rect(20 + (index * 60), yPosition - 10, 55, 8, 'F');
      doc.setTextColor(255, 255, 255);
      doc.setFontSize(7);
      doc.setFont(undefined, 'bold');
      doc.text('RECOMMENDED', 47.5 + (index * 60), yPosition - 5, { align: 'center' });
      doc.setTextColor(0, 0, 0);
    }
  });
  
  // Implementation Tips
  doc.setFontSize(14);
  doc.setFont(undefined, 'bold');
  doc.text('Implementation Checklist', 20, 220);
  
  doc.setFontSize(10);
  doc.setFont(undefined, 'normal');
  const tips = [
    '1. Update pricing on your website',
    '2. Notify existing customers of any changes',
    '3. Update marketing materials',
    '4. Train sales team on new pricing',
    '5. Monitor conversion rates for 30 days'
  ];
  
  tips.forEach((tip, index) => {
    doc.text(tip, 20, 230 + (index * 8));
  });
  
  // Footer
  doc.setFontSize(8);
  doc.setTextColor(128, 128, 128);
  doc.text('Generated by SaaS Pricing Calculator 2025', 105, 280, { align: 'center' });
  doc.text('© 2025 - Confidential Pricing Strategy', 105, 285, { align: 'center' });
  
  // Save the PDF
  doc.save('saas-pricing-recommendation.pdf');
};